// Generated by [optioner] command-line tool; DO NOT EDIT
// If you have any questions, please create issues and submit contributions at:
// https://github.com/chenmingyong0423/go-optioner

package coze

import "time"

//go:generate optioner -type Chat -output chat.go -mode append
type Chat struct {
	// The ID of the bot that the API interacts with.
	// 要进行会话聊天的 Bot ID。
	BotID string `opt:"-"`
	// The user who calls the API to chat with the bot.
	// 标识当前与 Bot 交互的用户，使用方自行维护此字段。
	User string `opt:"-"`

	// The credentials used to authenticate the client request. You can generate the personal access token from the Coze platform.
	// 用于验证客户端身份的访问令牌。你可以在扣子平台中生成访问令牌。
	PersonalAccessToken string `opt:"-"`

	// Optional: Session request timeout period.
	// 可选的：会话请求超时时间。
	Timeout time.Duration
}

func (c *Chat) Chat(stream bool) *Session {
	return NewSession(c, stream)
}

type ChatOption func(*Chat)

func NewChat(botID string, user string, personalAccessToken string, opts ...ChatOption) *Chat {
	chat := &Chat{
		BotID:               botID,
		User:                user,
		PersonalAccessToken: personalAccessToken,
	}

	for _, opt := range opts {
		opt(chat)
	}

	return chat
}

func WithTimeout(timeout time.Duration) ChatOption {
	return func(chat *Chat) {
		chat.Timeout = timeout
	}
}
